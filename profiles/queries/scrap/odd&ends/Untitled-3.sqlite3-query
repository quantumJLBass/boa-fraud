-- database: ./db/cache.db

-- Use the â–· button in the top right corner to run the entire file.

-- PRAGMA table_info(url_catalog);
-- -- DROP TABLE jurisdiction;

-- BEGIN;
-- DROP TABLE IF EXISTS addresses;
-- DROP TABLE IF EXISTS alembic_version;
-- DROP TABLE IF EXISTS assertions;
-- DROP TABLE IF EXISTS attributes;
-- DROP TABLE IF EXISTS classifications;
-- DROP TABLE IF EXISTS company_addresses;
-- DROP TABLE IF EXISTS company_akas;
-- DROP TABLE IF EXISTS company_industry_codes;
-- DROP TABLE IF EXISTS company_officers;
-- DROP TABLE IF EXISTS company_people;
-- DROP TABLE IF EXISTS control_mechanisms;
-- DROP TABLE IF EXISTS control_statement_mechanisms;
-- DROP TABLE IF EXISTS control_statements;
-- DROP TABLE IF EXISTS events;
-- DROP TABLE IF EXISTS filings;
-- DROP TABLE IF EXISTS gazette_notices;
-- DROP TABLE IF EXISTS identifier_delegate;
-- DROP TABLE IF EXISTS industry_codes;
-- DROP TABLE IF EXISTS lei_address;
-- DROP TABLE IF EXISTS lei_data;
-- DROP TABLE IF EXISTS lei_entities;
-- DROP TABLE IF EXISTS lei_entity;
-- DROP TABLE IF EXISTS lei_links;
-- DROP TABLE IF EXISTS lei_records;
-- DROP TABLE IF EXISTS lei_registration;
-- DROP TABLE IF EXISTS lei_relationships;
-- DROP TABLE IF EXISTS links;
-- DROP TABLE IF EXISTS mergers;
-- DROP TABLE IF EXISTS officers;
-- DROP TABLE IF EXISTS people;
-- DROP TABLE IF EXISTS people_addresses;
-- DROP TABLE IF EXISTS person_akas;
-- DROP TABLE IF EXISTS person_officers;
-- DROP TABLE IF EXISTS publications;
-- DROP TABLE IF EXISTS related_relationships;
-- DROP TABLE IF EXISTS share_parcel;
-- DROP TABLE IF EXISTS subsidiary_relationships;
-- DROP TABLE IF EXISTS total_shares;
-- DROP TABLE IF EXISTS trademark_registrations;
-- COMMIT;



-- SELECT DISTINCT URL, jurisdiction, company_number
-- FROM url_catalog
-- WHERE URL LIKE 'https://opencorporates.com/companies/%/%'
-- AND LENGTH(URL) - LENGTH(REPLACE(URL, '/', '')) = 5;


-- BEGIN;
-- DROP TABLE IF EXISTS base_urls;
-- -- Step 1: Create a temporary table with base URLs
-- CREATE TEMPORARY TABLE base_urls AS
-- SELECT id, URL
-- FROM url_catalog
-- WHERE URL LIKE 'https://opencorporates.com/companies/%/%'
--   AND LENGTH(URL) - LENGTH(REPLACE(URL, '/', '')) = 5;


-- -- Step 3: Preview the related URLs and their new parent_id
-- SELECT
--     uc.id AS child_id,
--     uc.URL AS child_url,
--     bu.id AS new_parent_id,
--     bu.URL AS base_url
-- FROM
--     url_catalog uc
-- JOIN
--     base_urls bu ON uc.URL LIKE bu.URL || '%'
-- WHERE
--     uc.URL != bu.URL
--     AND uc.URL LIKE 'https://opencorporates.com/companies/%/%';

-- -- Drop the temporary table after preview


-- COMMIT;

------------------------------------------------------------
-- BEGIN;

-- COMMIT;
-- -- Step 1: Create a temporary table with base URLs
-- CREATE TEMPORARY TABLE base_urls AS
-- SELECT id, URL
-- FROM url_catalog
-- WHERE URL LIKE 'https://opencorporates.com/companies/%/%'
-- AND LENGTH(URL) - LENGTH(REPLACE(URL, '/', '')) = 5;

-- -- Check the contents of base_urls
-- SELECT * FROM base_urls;

-- -- Step 2: Preview the related URLs and their new parent_id
-- SELECT
--     uc.id AS child_id,
--     uc.URL AS child_url,
--     uc.jurisdiction AS new_jurisdiction,
--     uc.company_number AS new_company_number,
--     bu.id AS new_parent_id,
--     bu.URL AS base_url
-- FROM
--     url_catalog uc
-- JOIN
--     base_urls bu ON uc.URL LIKE bu.URL || '%'
-- WHERE
--     uc.URL != bu.URL
-- LIMIT 10;

-- -- Drop the temporary table after preview
-- DROP TABLE IF EXISTS base_urls;


-- UPDATE url_catalog
-- SET parent_id = (
--     SELECT bu.id
--     FROM base_urls bu
--     WHERE url_catalog.URL LIKE bu.URL || '%'
--     AND url_catalog.URL != bu.URL
-- )
-- WHERE parent_id IS NULL
-- AND EXISTS (
--     SELECT 1
--     FROM base_urls bu
--     WHERE url_catalog.URL LIKE bu.URL || '%'
-- )


-----------------------------------------------------









-- BEGIN;
-- -- Drop the temporary table if it exists
-- DROP TABLE IF EXISTS url_patterns;

-- -- Define the patterns to append
-- CREATE TEMPORARY TABLE url_patterns(pattern TEXT);
-- INSERT INTO url_patterns VALUES
-- ('/statements/subsidiary_relationship_object'),
-- ('/statements/subsidiary_relationship_subject'),
-- ('/statements/branch_relationship_subject'),
-- ('/statements/branch_relationship_object'),
-- ('/statements/total_shares_object'),
-- ('/statements/total_shares_subject'),
-- ('/statements/share_parcel_object'),
-- ('/statements/share_parcel_subject'),
-- ('/statements/merger_object'),
-- ('/statements/merger_subject'),
-- ('/statements/trademark_registration'),
-- ('/statements/identifier_delegate'),
-- ('/statements/gazette_notice_delegate'),
-- ('/statements/control_statement_subject'),
-- ('/statements/control_statement_object'),
-- ('/statements/industry_code'),
-- ('/statements/supplier_relationship'),
-- ('/statements/subsequent_registration'),
-- ('/statements/alternate_registration'),
-- ('/filings'),
-- ('/events'),
-- ('/officers');

-- -- Preview the new entries that would be inserted
-- SELECT
--     base.URL || pattern.pattern AS new_url,
--     base.jurisdiction,
--     base.company_number
-- FROM (
--     SELECT DISTINCT URL, jurisdiction, company_number
--     FROM url_catalog
--     WHERE URL LIKE 'https://opencorporates.com/companies/%/%'
--     AND LENGTH(URL) - LENGTH(REPLACE(URL, '/', '')) = 5
-- ) AS base
-- CROSS JOIN url_patterns AS pattern
-- WHERE NOT EXISTS (
--     SELECT 1
--     FROM url_catalog
--     WHERE URL = base.URL || pattern.pattern
-- );
-- COMMIT;


-- -- Preview the new entries that would be inserted
-- SELECT
--     base.URL || pattern.pattern AS new_url,
--     base.jurisdiction,
--     base.company_number
-- FROM (
--     SELECT DISTINCT URL, jurisdiction, company_number
--     FROM url_catalog
--     WHERE URL LIKE 'https://opencorporates.com/companies/%/%'
--     AND LENGTH(URL) - LENGTH(REPLACE(URL, '/', '')) = 5
-- ) AS base
-- CROSS JOIN url_patterns AS pattern
-- WHERE NOT EXISTS (
--     SELECT 1
--     FROM url_catalog
--     WHERE URL = base.URL || pattern.pattern
-- );

----------------------------------------------------
-- -- Insert new entries if they don't already exist
-- PRAGMA foreign_keys = OFF;
-- INSERT INTO url_catalog (URL, jurisdiction, company_number)
-- SELECT
--     base.URL || pattern.pattern AS new_url,
--     base.jurisdiction,
--     base.company_number
-- FROM (
--     SELECT DISTINCT URL, jurisdiction, company_number
--     FROM url_catalog
--     WHERE URL LIKE 'https://opencorporates.com/companies/%/%'
--     AND LENGTH(URL) - LENGTH(REPLACE(URL, '/', '')) = 5
-- ) AS base
-- CROSS JOIN url_patterns AS pattern
-- WHERE NOT EXISTS (
--     SELECT 1
--     FROM url_catalog
--     WHERE URL = base.URL || pattern.pattern
-- );
-- PRAGMA foreign_keys = ON;

----------------------------------------------------



-- PRAGMA foreign_keys = OFF;
-- INSERT INTO jurisdiction (
--     id,
--     code,
--     name,
--     country,
--     full_name,
--     state_abv,
--     county,
--     city,
--     longitude,
--     latitude,
--     zip_code,
--     area_code,
--     parent_jurisdiction
-- )
-- SELECT
--     id,
--     code,
--     name,
--     country,
--     full_name,
--     state_abv,
--     NULL AS county,         -- Defaulting to NULL
--     NULL AS city,           -- Defaulting to NULL
--     NULL AS longitude,      -- Defaulting to NULL
--     NULL AS latitude,       -- Defaulting to NULL
--     NULL AS zip_code,       -- Defaulting to NULL
--     NULL AS area_code,      -- Defaulting to NULL
--     parent_jurisdiction
-- FROM
--     jurisdiction_old;
-- PRAGMA foreign_keys = ON;


----------------------------------------------


-- DELETE FROM jurisdiction WHERE id > 352;
------------------------------------------------------
-- DELETE FROM url_catalog
-- WHERE id BETWEEN 54520 AND 54634;
------------------------------------------------------
-- UPDATE url_catalog
-- SET company_number = '0803172360',
--     jurisdiction = 'Texas',
--     parent_id = 445
-- WHERE id IN (457,458,459);
-----------------------------------------------------

-- SELECT * FROM url_catalog WHERE company_number ='656240';
----------------------------------------------------

-- SELECT * FROM url_catalog WHERE url ='https://opencorporates.com/officers/769465323';

-- SELECT * FROM url_catalog
-- WHERE url LIKE 'https://opencorporates.com/officers/%';
---------------------------------------------------------------
-- PRAGMA foreign_keys = OFF;
-- DELETE FROM url_catalog
-- WHERE url LIKE 'https://opencorporates.com/officers/%';
-- PRAGMA foreign_keys = ON;
-------------------------------------------------------
-- UPDATE url_catalog
-- SET html_content = NULL;
------------------------------------------------------
-- ALTER TABLE url_catalog ADD COLUMN cached_on DATETIME;

----------------------------------------------------------
-- UPDATE url_catalog
-- SET cached_on = datetime('now', '-7 hours')
-- WHERE html_content IS NOT NULL;




-- WITH table_info AS (
--     SELECT
--         m.name AS table_name,
--         m.type AS object_type,
--         m.sql AS create_statement,
--         ti.name AS column_name,
--         ti.pk AS is_primary_key
--     FROM
--         sqlite_master m
--     JOIN
--         pragma_table_info(m.name) ti
--     WHERE
--         m.type IN ('table', 'index', 'view', 'trigger')
-- ),
-- foreign_keys AS (
--     SELECT
--         m.name AS table_name,
--         fk."from" AS fk_column,
--         fk."table" AS referenced_table,
--         fk."to" AS referenced_column,
--         fk."from" || ' references ' || fk."table" || '(' || fk."to" || ')' AS fk_definition
--     FROM
--         sqlite_master m
--     JOIN
--         pragma_foreign_key_list(m.name) fk
-- ),
-- fk_aggregated AS (
--     SELECT
--         table_name,
--         GROUP_CONCAT(fk_definition, ', ') AS fk_definitions
--     FROM
--         foreign_keys
--     GROUP BY
--         table_name
-- ),
-- indexes AS (
--     SELECT
--         m.name AS table_name,
--         il.name AS index_name,
--         ii.name AS indexed_column
--     FROM
--         sqlite_master m
--     JOIN
--         pragma_index_list(m.name) il
--     JOIN
--         pragma_index_info(il.name) ii
-- ),
-- index_aggregated AS (
--     SELECT
--         table_name,
--         GROUP_CONCAT(index_name || '(' || indexed_column || ')', ', ') AS index_definitions
--     FROM
--         indexes
--     GROUP BY
--         table_name
-- ),
-- primary_keys AS (
--     SELECT
--         m.name AS table_name,
--         GROUP_CONCAT(ti.name, ', ') AS pk_columns
--     FROM
--         sqlite_master m
--     JOIN
--         pragma_table_info(m.name) ti
--     WHERE
--         ti.pk > 0
--     GROUP BY
--         m.name
-- )
-- SELECT
--     t.table_name AS name,
--     t.object_type AS type,
--     t.create_statement AS sql,
--     GROUP_CONCAT(t.column_name || CASE WHEN t.is_primary_key = 1 THEN ' (PK)' ELSE '' END, ', ') AS columns,
--     fk.fk_definitions AS foreign_keys,
--     i.index_definitions AS indexes,
--     p.pk_columns AS primary_keys
-- FROM
--     table_info t
-- LEFT JOIN
--     fk_aggregated fk ON t.table_name = fk.table_name
-- LEFT JOIN
--     index_aggregated i ON t.table_name = i.table_name
-- LEFT JOIN
--     primary_keys p ON t.table_name = p.table_name
-- GROUP BY
--     t.table_name, t.object_type, t.create_statement
-- ORDER BY
--     t.table_name
-- ;





SELECT * FROM (
    -- Last 5 Records Based on `cached_on`
    SELECT
        'Last 5 Records' AS query_type,
        cached_on,
        id,
        company_number,
        jurisdiction,
        url,
        "--" AS total_html_content_not_null,
        "--" AS total_rows,
        ROW_NUMBER() OVER (ORDER BY cached_on DESC) as row_num
    FROM url_catalog
    WHERE cached_on IS NOT NULL
    AND url LIKE 'https://opencorporates.com/companies/%/%'
    AND LENGTH(url) - LENGTH(REPLACE(url, '/', '')) = 5

    UNION ALL

    -- Total Records with `html_content` as NOT NULL
    SELECT
        'Total HTML Content Not Null' AS query_type,
        "--" AS cached_on,
        "--" AS id,
        "--" AS company_number,
        "--" AS jurisdiction,
        "--" AS url,
        COUNT(*) AS total_html_content_not_null,
        "--" AS total_rows,
        NULL AS row_num
    FROM url_catalog
    WHERE html_content IS NOT NULL
    AND url LIKE 'https://opencorporates.com/companies/%/%'
    AND LENGTH(url) - LENGTH(REPLACE(url, '/', '')) = 5

    UNION ALL

    -- Total Row Count
    SELECT
        'Total Row Count' AS query_type,
        "--" AS cached_on,
        "--" AS id,
        "--" AS company_number,
        "--" AS jurisdiction,
        "--" AS url,
        "--" AS total_html_content_not_null,
        COUNT(*) AS total_rows,
        NULL AS row_num
    FROM url_catalog

)
WHERE row_num IS NULL OR row_num <= 5
ORDER BY
    CASE
        WHEN query_type = 'Last 5 Records' THEN 1
        WHEN query_type = 'Total HTML Content Not Null' THEN 2
        ELSE 3
    END;


